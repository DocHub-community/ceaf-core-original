entities:

  seaf.ba.self:
    title: Точка зрения
    description: Указание на Участника, чья КА должна быть сформирована
    schema:
      type: array
      items:
        $ref: "#/$rels/seaf.ba.parties.parties"


  seaf.ba.parties:
    title: Участники
    schema:

      type: object
      patternProperties:
        "[a-zA-Z0-9_]*(\\.[a-zA-Z0-9_]*)*$":
          type: object
          properties:
            title:
              title: Наименование Участника
              description: Юрлицо, Группа, объединение, сегмент, оргединица
              type: string
            has_interest:
              title: Интересующие продукты
              description: Продукты, потребляемые или потенциально интересные Участнику
              type: array
              items:
                $ref: "#/$rels/seaf.ba.products.product"
            relates:
              title: Агрегирующая сущность
              type: array
              items:
                $ref: "#/$rels/seaf.ba.parties.party"
          required:
            - title
    objects:
      party:
        route: "/"
        title: Участник
        symbol: "party"

    presentations:

      party_summary:
        type: markdown
        template: templates/party_summary.md
        source: >
          (
            $domain:= $params.domain;

            $party:= $spread($."seaf.ba.parties")[$keys($) = $domain];

            $counterparts:= [$spread($."seaf.ba.parties")[
                                                            $contains($keys($), $domain) and 
                                                            $substringBefore($keys($), $domain) = "" and
                                                            $substringAfter($keys($), $domain) != "" and
                                                            $count([$.*.relates[$contains($, $domain)]])=0
                                                          ]
                                                          .{  "domain": $keys($), 
                                                              "title": $.*.title, 
                                                              "description": $.*.description,
                                                              "alias": [$map($.*.alias, function($v) {
                                                                { "id": $v, 
                                                                  "body_com": $lookup($$."seaf.ba.parties", $v)
                                                                }
                                                              })]
                                                            }
                            ];

            $arch_parties:= $spread($."seaf.ba.parties")[$not($contains($keys($), "."))];


            $top_parties:= $spread($."seaf.ba.parties")[$not($exists($.*.relates))];
            $side_parties:= $top_parties[$not($keys($) in $keys($arch_parties))];


            
            /*$counterparts:= [$side_parties[$substringBefore($keys($), ".") = $keys($party)].{"domain": $keys($), "title": $.*.title, "description": $.*.description}]; */


            $members:= [$spread($."seaf.ba.parties")[$domain in $.*.relates].{"domain": $keys($), "title": $.*.title, "description": $.*.description}];

            $managedBy:= [$party.*.relates.{"domain": $, "title": $lookup($$."seaf.ba.parties", $).title, "description": $lookup($$."seaf.ba.parties", $).description}];

            $party:= {"id": $keys($party), "body": $party.*, 
                      "counterparts": $counterparts,
                      "members": $members,
                      "managedBy": $managedBy
                     }
          )

      no_archs:
        type: markdown
        template: templates/no_archs.md
